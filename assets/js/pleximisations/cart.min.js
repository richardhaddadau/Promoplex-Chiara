const countCartItems=()=>{const cartItems=Object.keys(localStorage);let cartTotal=0;for(const item in cartItems)"PXciID"===cartItems[item].slice(0,6)&&cartTotal++;return cartTotal},updateCart=()=>{const cartItems=Object.keys(localStorage);let currentItem,itemListHTML="",quoteSubTotal=0,quoteTax=0,quoteTotal=0;countCartItems()>0?(document.querySelector("#pleximisation-cart-wrapper").style.display="block",document.querySelector("#pleximisation-empty-cart-wrapper").style.display="none"):(document.querySelector("#pleximisation-cart-wrapper").style.display="none",document.querySelector("#pleximisation-empty-cart-wrapper").style.display="block");for(const item in cartItems)if("PXciID"===cartItems[item].slice(0,6)){currentItem=JSON.parse(localStorage.getItem(cartItems[item]));let currentOptions="",currentPleximisations="";for(const x in currentItem.variations)currentOptions+=`\n                    <dt class="definitionList-key">${currentItem.variations[x][0].toUpperCase()}:</dt>\n                    <dd class="definitionList-value">${currentItem.variations[x][1]}</dd>\n                `;for(const y in currentItem.pleximisations)currentPleximisations+=`\n                    <dt class="definitionList-key">${currentItem.pleximisations[y][0]}:</dt>\n                    <dd class="definitionList-value">${currentItem.pleximisations[y][1]}</dd>\n                `;itemListHTML+=`\n                <tr class="cart-item" data-item-row>\n                    \n                    \x3c!-- Item Image --\x3e\n                    <td class="cart-item-block cart-item-figure">\n                        <img class="cart-item-image lazyload" data-sizes="auto" src="${currentItem["product-image-url"]}" alt="${currentItem["product-title"]}" title="${currentItem["product-title"]}">\n                    </td>\n\n                    \x3c!-- Item Details --\x3e\n                    <td class="cart-item-block cart-item-title">\n                        <p class="cart-item-brand">${currentItem["product-brand"]}</p>\n                        \n                        <h4 class="cart-item-name"><a href="${currentItem["product-url"]}">${currentItem["product-title"]}</a></h4>\n\n                        <dl class="definitionList">\n                            <dt class="definitionList-key">SKU: </dt>\n                            <dd class="definitionList-value">${currentItem["product-sku"]}</dd>\n                            ${currentOptions}\n                            ${currentPleximisations}\n                        </dl>\n                    </td>\n\n                    <td class="cart-item-block cart-item-info">\n                        <span class="cart-item-label">Price</span>\n                        <span class="cart-item-value">$${currentItem["price-per-unit"]}</span>\n                    </td>\n\n                    <td class="cart-item-block cart-item-info">\n                        <span class="cart-item-label">Setup Fees</span>\n                        <span class="cart-item-value">$${currentItem["setup-fees"]}</span>\n                    </td>\n\n                    <td class="cart-item-block cart-item-info cart-item-quantity">\n                        <span class="cart-item-label">Quantity</span>\n                        <span class="cart-item-value">${currentItem.quantity}</span>\n                    </td>\n\n                    <td class="cart-item-block cart-item-info cart-item-quantity">\n                        <span class="cart-item-label">Total</span>\n                        <span class="cart-item-value">$${currentItem.total}</span>\n                        <a class="" href="#" data-pleximisation-id=${cartItems[item]}>\n                            <i class="fa-solid fa-trash-can" id="quote-delete-icon"></i>\n                        </a>\n                    </td>\n                </tr>\n            `;const floatTotal=parseFloat(currentItem.total);quoteSubTotal+=floatTotal,quoteTax+=.1*floatTotal,quoteTotal+=1.1*floatTotal}document.querySelector("#pleximimsation-quote-list").innerHTML=itemListHTML,document.querySelector("#pleximisation-totals-subtotal span").innerHTML=`$${quoteSubTotal.toFixed(2)}`,document.querySelector("#pleximisation-totals-tax span").innerHTML=`$${quoteTax.toFixed(2)}`,document.querySelector("#pleximisation-totals-total span").innerHTML=`$${quoteTotal.toFixed(2)}`},removeFromQuote=storageID=>{localStorage.removeItem(storageID),document.querySelector("[data-cart-page-title]").innerHTML=`Your Cart (${countCartItems()} items)`,updateCart()},formValidated=()=>{const formFirstName=document.querySelector("#form-first-name").value,formLastName=document.querySelector("#form-last-name").value,formEmail=document.querySelector("#form-email").value,formStreetAddress=document.querySelector("#form-street-address").value,formSuburb=document.querySelector("#form-suburb").value,formPostcode=document.querySelector("#form-postcode").value,formState=document.querySelector("#form-state").value,validationMessage=[];return 0===formFirstName.length&&validationMessage.push("No First Name was provided."),0===formLastName.length&&validationMessage.push("No Last Name was provided."),0===formEmail.length?validationMessage.push("No Email Address was provided."):/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(formEmail)||validationMessage.push("Invalid Email Address provided."),0===formStreetAddress.length&&validationMessage.push("No Street Address was provided."),0===formSuburb.length&&validationMessage.push("No Suburb was provided."),0===formPostcode.length&&validationMessage.push("No Postcode was provided."),0===formState.length&&validationMessage.push("No State was provided."),0===validationMessage.length?null:validationMessage},showError=(errorId,errorType,errorMessage)=>{const currentError=document.querySelector(`#${errorId}`);currentError.classList.remove("danger"),currentError.classList.remove("warning"),currentError.classList.add(errorType),currentError.innerHTML=errorMessage,currentError.classList.remove("hide")},submitQuote=()=>{const cartItems=Object.keys(localStorage);let currentItem,emailContent='<table style="width: 100%;"><tbody>',quoteTotal=0;if(0===countCartItems())return showError("pleximisation-cart-message","danger","You cannot request a quote for an empty cart."),!1;const errorMessage=formValidated();if(null!=errorMessage)return showError("pleximisation-cart-message","danger",errorMessage.join("<br>")),!1;for(let i=0;i<document.querySelectorAll(".pleximisation-error-message").length;i++)document.querySelectorAll(".pleximisation-error-message")[i].classList.contains("hide")||document.querySelectorAll(".pleximisation-error-message")[i].classList.add("hide");let cartCount=1;for(const item in cartItems)if("PXciID"===cartItems[item].slice(0,6)){currentItem=JSON.parse(localStorage.getItem(cartItems[item]));let currentOptions="",currentPleximisations="";for(const x in currentItem.variations)currentOptions+=`\n                    ${currentItem.variations[x][0].toUpperCase()}: ${currentItem.variations[x][1]}<br/>\n                `;for(const y in currentItem.pleximisations)currentPleximisations+=`\n                    ${currentItem.pleximisations[y][0]}: ${currentItem.pleximisations[y][1]}<br/>\n                `;emailContent+=`\n                <tr style="width: 100%; min-height: 20px; display: flex; flex-direction: row; flex-wrap: nowrap; align-items: center; border-bottom: 1px solid #ea4f24;">\n                    <td style="padding: 10px; width: 15%; text-align: center;">\n                        <img src="${currentItem["product-image-url"]}" style="max-height: 130px; max-width: 100%;" alt="">\n                    </td>\n\n                    <td style="padding: 10px; flex-grow: 2; height: 100%;">\n                        <h4 style="font-size: 100%;">${cartCount++}. ${currentItem["product-title"]}</h4>\n                        <p style="font-size: 80%;">\n                            SKU: ${currentItem["product-sku"]}<br/>\n                            ${currentOptions}<br/>\n                            ${currentPleximisations}\n                        </p>\n\n                        <p style="font-size: 80%;">\n                            Price Per Unit: $${parseFloat(currentItem["price-per-unit"]).toFixed(2)}\n                            Setup Fees: $${parseFloat(currentItem["setup-fees"]).toFixed(2)}\n                            Quantity: ${currentItem.quantity}\n                        </p>\n                    </td>\n\n                    <td style="padding: 10px; width: 20%; text-align: center;">\n                        <h3 style="font-size: 120%;">$${parseFloat(currentItem.total).toFixed(2)}</h3>\n                    </td>\n                </tr>\n            `;const floatTotal=parseFloat(currentItem.total);quoteTotal+=1.1*floatTotal}emailContent+="</tbody></table>";const customerFirstName=document.querySelector("#form-first-name").value,customerLastName=document.querySelector("#form-last-name").value,customerCompanyName=document.querySelector("#form-company-name").value,customerEmail=document.querySelector("#form-email").value,customerPhone=document.querySelector("#form-phone").value,customerMobile=document.querySelector("#form-mobile").value,customerStreetAddress=document.querySelector("#form-street-address").value,customerSuburb=document.querySelector("#form-suburb").value,customerPostcode=document.querySelector("#form-postcode").value,customerState=document.querySelector("#form-state").value,customerComments=document.querySelector("#form-comments").value,templateParams={"quote-first-name":customerFirstName,"quote-last-name":customerLastName,"quote-company-name":customerCompanyName,"quote-email":customerEmail,"quote-phone":customerPhone,"quote-mobile":customerMobile,"quote-street-address":customerStreetAddress,"quote-suburb":customerSuburb,"quote-postcode":customerPostcode,"quote-state":customerState,"quote-comments":customerComments,"quote-content":emailContent,"quote-total":quoteTotal.toFixed(2)};emailjs.send("service_kj4z9fj","template_2iqqo7e",templateParams).then(response=>{console.log("SUCCESS!",response.status,response.text),showError("pleximisation-cart-message","success","Thank you for your quote request. We will be in touch soon.");for(const item in cartItems)"PXciID"===cartItems[item].slice(0,6)&&removeFromQuote(cartItems[item])},error=>{console.log("FAILED...",error),showError("pleximisation-cart-message","danger","Oops! Something went wrong. Please try again.<br/>If this keeps happening, please contact us and let us know.")}),updateCart()};window.addEventListener("load",()=>{for(let i=0;i<document.querySelectorAll(".pleximisation-error-message").length;i++)document.querySelectorAll(".pleximisation-error-message")[i].classList.contains("hide")||document.querySelectorAll(".pleximisation-error-message")[i].classList.add("hide");updateCart(),document.querySelector("[data-cart-page-title]").innerHTML=`Your Cart (${countCartItems()} items)`;for(let i=0;i<document.querySelectorAll("[data-pleximisation-id]").length;i++)document.querySelectorAll("[data-pleximisation-id]")[i].addEventListener("click",()=>{const thisId=document.querySelectorAll("[data-pleximisation-id]")[i].dataset.pleximisationId;removeFromQuote(thisId)})});
{"version":3,"sources":["webpack://WebpackChiara/./assets/js/theme/brands.js","webpack://WebpackChiara/./assets/js/chiara/display-type.js"],"names":["Brands","onReady","displayTypeFactory","this","initInfiniteScroll","context","themeSettings","brandspage_infiniteScroll","then","module","initBrandsPage","PageManager","PLUGIN_KEY","DisplayType","$form","$target","inputName","prefixClassName","onInputChange","bind","update","$","val","bindEvents","value","each","i","el","j","classList","length","className","item","indexOf","removeClass","addClass","event","target","on","unbindEvents","off","selector","overrideOptions","$context","map","index","form","instanceKey","cachedInstance","data","id","$element","targetId","attr","options","instance","toArray"],"mappings":"yRAGqBA,E,iLAEjBC,QAAA,WACIC,cAGAC,KAAKC,sB,EAITA,mBAAA,WAAqB,WACbD,KAAKE,QAAQC,cAAcC,2BAC3B,8BAAoCC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,eAAe,EAAKL,a,GAZtDM,M,qGCD9BC,EACK,cADLA,EAEK,eAkBJ,IAAMC,EAAb,WACI,WAAYC,EAAOC,EAAnB,GAGQ,iBAAJ,GAAI,MAFJC,iBAEI,MAFQ,eAER,MADJC,uBACI,MADc,gBACd,EACJd,KAAKa,UAAYA,EACjBb,KAAKc,gBAAkBA,EACvBd,KAAKW,MAAQA,EACbX,KAAKY,QAAUA,EAEfZ,KAAKe,cAAgBf,KAAKe,cAAcC,KAAKhB,MAE7CA,KAAKiB,OAAOC,EAAE,cAAclB,KAAKa,UAApB,YAA0Cb,KAAKW,OAAOQ,OAEnEnB,KAAKoB,aAdb,2BAiBIH,OAAA,SAAOI,GAAO,WACVrB,KAAKY,QAAQU,MAAK,SAACC,EAAGC,GAClB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAGE,UAAUC,OAAQF,IAAK,CAC1C,IAAMG,EAAYJ,EAAGE,UAAUG,KAAKJ,GACY,IAA5CG,EAAUE,QAAQ,EAAKhB,kBACvB,EAAKF,QAAQmB,YAAYH,OAIrC5B,KAAKY,QAAQoB,SAAb,GAAyBhC,KAAKc,gBAAkBO,IA1BxD,EA6BIN,cAAA,SAAckB,GACVjC,KAAKiB,OAAOC,EAAEe,EAAMC,QAAQf,QA9BpC,EAiCIC,WAAA,WACIpB,KAAKW,MAAMwB,GAAG,SAAd,cAAsCnC,KAAKa,UAA3C,IAAyDb,KAAKe,gBAlCtE,EAqCIqB,aAAA,WACIpC,KAAKW,MAAM0B,IAAI,SAAf,cAAuCrC,KAAKa,UAA5C,IAA0Db,KAAKe,gBAtCvE,KA0Ce,SAAShB,EAAmBuC,EAAyCC,GAGhF,YAHsG,IAA/DD,MAA+D,SAA3C7B,EAA2C,cAAtB8B,MAAkB,IACnFrB,EAAEoB,EAAUC,EAAgBC,UAE7BC,KAAI,SAACC,EAAOC,GACtB,IAAMhC,EAAQO,EAAEyB,GACVC,EAAiBnC,EAAN,WACXoC,EAAiBlC,EAAMmC,KAAKF,GAElC,GAAIC,aAA0BnC,EAC1B,OAAOmC,EAGX,IArEaE,EAQIC,EA6DXC,GArEOF,EAqEgBpC,EAAMmC,KAAKrC,IACpCE,EAAMmC,KAAQrC,EAAd,WACAE,EAAMuC,KAAK,UAtEW,IAApBH,EAAGjB,QAAQ,KACViB,EAGX,IAAWA,EAmEDI,EAAU,IA/Db,CACHtC,WAFiBmC,EAgEwBrC,GA9DrBmC,KAAQrC,EAAjB,aACXK,gBAAiBkC,EAASF,KAAQrC,EAAjB,oBA6DgC8B,GAC3Ca,EAAW,IAAI1C,EAAYC,EAAOO,EAAE+B,GAAWE,GAIrD,OAFAxC,EAAMmC,KAAKF,EAAaQ,GAEjBA,KACRC,a","file":"theme-bundle.chunk.17.js","sourcesContent":["import PageManager from './page-manager';\nimport displayTypeFactory from '../chiara/display-type'; // Chiara MOD\n\nexport default class Brands extends PageManager {\n    // Chiara MOD\n    onReady() {\n        displayTypeFactory();\n\n        // Chiara\n        this.initInfiniteScroll();\n    }\n\n    // Chiara\n    initInfiniteScroll() {\n        if (this.context.themeSettings.brandspage_infiniteScroll) {\n            import('../chiara/infinite-scroll').then(module => module.initBrandsPage(this.context));\n        }\n    }\n}\n","import _ from 'lodash';\n\nconst PLUGIN_KEY = {\n    CAMEL: 'displayType',\n    SNAKE: 'display-type',\n};\n\nfunction prependHash(id) {\n    if (id && id.indexOf('#') === 0) {\n        return id;\n    }\n\n    return `#${id}`;\n}\n\nfunction optionsFromData($element) {\n    return {\n        inputName: $element.data(`${PLUGIN_KEY.CAMEL}InputName`),\n        prefixClassName: $element.data(`${PLUGIN_KEY.CAMEL}PrefixClassName`),\n    };\n}\n\nexport class DisplayType {\n    constructor($form, $target, {\n        inputName = 'display-type',\n        prefixClassName = 'display-type-',\n    } = {}) {\n        this.inputName = inputName;\n        this.prefixClassName = prefixClassName;\n        this.$form = $form;\n        this.$target = $target;\n\n        this.onInputChange = this.onInputChange.bind(this);\n\n        this.update($(`input[name=${this.inputName}]:checked`, this.$form).val());\n\n        this.bindEvents();\n    }\n\n    update(value) {\n        this.$target.each((i, el) => {\n            for (let j = 0; j < el.classList.length; j++) {\n                const className = el.classList.item(j);\n                if (className.indexOf(this.prefixClassName) === 0) {\n                    this.$target.removeClass(className);\n                }\n            }\n        });\n        this.$target.addClass(`${this.prefixClassName}${value}`);\n    }\n\n    onInputChange(event) {\n        this.update($(event.target).val());\n    }\n\n    bindEvents() {\n        this.$form.on('change', `input[name=${this.inputName}]`, this.onInputChange);\n    }\n\n    unbindEvents() {\n        this.$form.off('change', `input[name=${this.inputName}]`, this.onInputChange);\n    }\n}\n\nexport default function displayTypeFactory(selector = `[data-${PLUGIN_KEY.SNAKE}]`, overrideOptions = {}) {\n    const $forms = $(selector, overrideOptions.$context);\n\n    return $forms.map((index, form) => {\n        const $form = $(form);\n        const instanceKey = `${PLUGIN_KEY.CAMEL}Instance`;\n        const cachedInstance = $form.data(instanceKey);\n\n        if (cachedInstance instanceof DisplayType) {\n            return cachedInstance;\n        }\n\n        const targetId = prependHash($form.data(PLUGIN_KEY.CAMEL) ||\n            $form.data(`${PLUGIN_KEY.CAMEL}Target`) ||\n            $form.attr('href'));\n        const options = _.extend(optionsFromData($form), overrideOptions);\n        const instance = new DisplayType($form, $(targetId), options);\n\n        $form.data(instanceKey, instance);\n\n        return instance;\n    }).toArray();\n}\n"],"sourceRoot":""}
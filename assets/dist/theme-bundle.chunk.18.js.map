{"version":3,"sources":["webpack://WebpackChiara/./assets/js/theme/home.js","webpack://WebpackChiara/./assets/js/chiara/youtube-carousel.js"],"names":["Home","onReady","this","context","hasCarouselVideo","youtubeCarouselFactory","$","PageManager","mediumMediaQuery","uid","YoutubeSlick","slick","$slick","$videos","find","onSlickInit","bind","onSlickBeforeChange","onSlickAfterChange","onPlayerReady","onPlayerStateChange","bindEvents","hasClass","on","event","target","getIframe","closest","data","matches","setTimeout","mute","playVideo","YT","PlayerState","PLAYING","addClass","PAUSED","removeClass","ENDED","each","j","vid","$vid","id","attr","Player","videoId","wmode","playerVars","controls","disablekb","enablejsapi","fs","rel","showinfo","iv_load_policy","modestbranding","events","onStateChange","player","stopVideo","initCarousel","$carousel","i","length","mediaQueryListFactory","window","onYouTubeIframeAPIReady","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore"],"mappings":"qSAGqBA,E,yKACjBC,QAAA,WACQC,KAAKC,QAAQC,kBACbC,YAAuBC,EAAE,kB,GAHHC,M,mDCHlC,kDAEIC,EAFJ,QAGIC,EAAM,EAEJC,E,WACF,WAAYC,GACRT,KAAKU,OAASN,EAAEK,GAChBT,KAAKW,QAAUX,KAAKU,OAAOE,KAAK,kBAChCZ,KAAKa,YAAcb,KAAKa,YAAYC,KAAKd,MACzCA,KAAKe,oBAAsBf,KAAKe,oBAAoBD,KAAKd,MACzDA,KAAKgB,mBAAqBhB,KAAKgB,mBAAmBF,KAAKd,MACvDA,KAAKiB,cAAgBjB,KAAKiB,cAAcH,KAAKd,MAC7CA,KAAKkB,oBAAsBlB,KAAKkB,oBAAoBJ,KAAKd,MACzDA,KAAKmB,a,2BAGTA,WAAA,WACQnB,KAAKU,OAAOU,SAAS,sBACrBpB,KAAKa,cAGTb,KAAKU,OAAOW,GAAG,OAAQrB,KAAKa,aAC5Bb,KAAKU,OAAOW,GAAG,eAAgBrB,KAAKe,qBACpCf,KAAKU,OAAOW,GAAG,cAAerB,KAAKgB,qB,EAGvCC,cAAA,SAAcK,GAAO,WAEjBlB,EAAEkB,EAAMC,OAAOC,aAAaC,QAAQ,gBAAgBC,KAAK,iBAAkBJ,EAAMC,QAG7EjB,EAAiBqB,SACjBC,YAAW,WACHxB,EAAEkB,EAAMC,OAAOC,aAAaC,QAAQ,gBAAgBL,SAAS,kBAC7D,EAAKV,OAAOD,MAAM,mBAC6B,IAApC,EAAKC,OAAOgB,KAAK,gBACxBJ,EAAMC,OAAOM,OAEjBP,EAAMC,OAAOO,eAElB,M,EAIXZ,oBAAA,SAAoBI,GAEZA,EAAMI,OAASK,GAAGC,YAAYC,UAC9BjC,KAAKU,OAAOwB,SAAS,uBACrBlC,KAAKU,OAAOD,MAAM,eAGlBa,EAAMI,OAASK,GAAGC,YAAYG,QAC9BnC,KAAKU,OAAO0B,YAAY,uBAIxBd,EAAMI,OAASK,GAAGC,YAAYK,QAC9BrC,KAAKU,OAAO0B,YAAY,uBACxBpC,KAAKU,OAAOD,MAAM,aAClBT,KAAKU,OAAOD,MAAM,e,EAI1BI,YAAA,WAAc,WACVb,KAAKW,QAAQ2B,MAAK,SAACC,EAAGC,GAClB,IAAMC,EAAOrC,EAAEoC,GACTE,EAAK,kBAAkBnC,IAE7BkC,EAAKE,KAAK,KAAMD,GAGD,IAAIX,GAAGa,OAAOF,EAAI,CAE7BG,QAASJ,EAAKf,KAAK,WACnBoB,MAAO,cACPC,WAAY,CACRC,SAAU,EACVC,UAAW,EACXC,YAAa,EACbC,GAAI,EACJC,IAAK,EACLC,SAAU,EACVC,eAAgB,EAChBC,eAAgB,EAChBT,MAAO,eAEXU,OAAQ,CACJzD,QAAS,EAAKkB,cACdwC,cAAe,EAAKvC,2B,EAMpCH,oBAAA,WACI,IAAM2C,EAAS1D,KAAKU,OAAOE,KAAK,6BAA6Bc,KAAK,kBAC9DgC,GACAA,EAAOC,a,EAIf3C,mBAAA,WAOI,GALAhB,KAAKU,OAAOD,MAAM,aAKdH,EAAiBqB,QAAS,CAC1B,IAAM+B,EAAS1D,KAAKU,OAAOE,KAAK,6BAA6Bc,KAAK,kBAC9DgC,IACA1D,KAAKU,OAAOD,MAAM,mBAC6B,IAApCT,KAAKU,OAAOgB,KAAK,gBACxBgC,EAAO7B,OAEX6B,EAAO5B,e,KAMvB,SAAS8B,EAAaC,GAClBA,EAAUvB,MAAK,SAACwB,EAAGrD,GACf,IAAMC,EAASN,EAAEK,GACbC,EAAOE,KAAK,kBAAkBmD,OAAS,IACvCrD,EAAOwB,SAAS,uBAChB,IAAI1B,EAAaC,OAKd,SAASN,EAAuB0D,GAC3C,GAAIA,EAAUjD,KAAK,kBAAkBmD,OAAS,EAG1C,GAFAzD,EAAmB0D,YAAsB,eAEK,IAAnCC,OAAOC,wBAAyC,CACvDD,OAAOC,wBAA0BN,EAAa9C,KAAKmD,OAAQJ,GAG3D,IAAMM,EAAMC,SAASC,cAAc,UACnCF,EAAIG,IAAM,qCACV,IAAMC,EAAiBH,SAASI,qBAAqB,UAAU,GAC/DD,EAAeE,WAAWC,aAAaP,EAAKI,QAI5CX,EAAaC,M","file":"theme-bundle.chunk.18.js","sourcesContent":["import PageManager from './page-manager';\nimport youtubeCarouselFactory from '../chiara/youtube-carousel';\n\nexport default class Home extends PageManager {\n    onReady() {\n        if (this.context.hasCarouselVideo) {\n            youtubeCarouselFactory($('[data-slick]'));\n        }\n    }\n}\n","import mediaQueryListFactory from '../theme/common/media-query-list';\n\nlet mediumMediaQuery;\nlet uid = 1;\n\nclass YoutubeSlick {\n    constructor(slick) {\n        this.$slick = $(slick);\n        this.$videos = this.$slick.find('[data-youtube]');\n        this.onSlickInit = this.onSlickInit.bind(this);\n        this.onSlickBeforeChange = this.onSlickBeforeChange.bind(this);\n        this.onSlickAfterChange = this.onSlickAfterChange.bind(this);\n        this.onPlayerReady = this.onPlayerReady.bind(this);\n        this.onPlayerStateChange = this.onPlayerStateChange.bind(this);\n        this.bindEvents();\n    }\n\n    bindEvents() {\n        if (this.$slick.hasClass('slick-initialized')) {\n            this.onSlickInit();\n        }\n\n        this.$slick.on('init', this.onSlickInit);\n        this.$slick.on('beforeChange', this.onSlickBeforeChange);\n        this.$slick.on('afterChange', this.onSlickAfterChange);\n    }\n\n    onPlayerReady(event) {\n        // store player object for use later\n        $(event.target.getIframe()).closest('.slick-slide').data('youtube-player', event.target);\n\n        // On desktop: Play video if first slide is video\n        if (mediumMediaQuery.matches) {\n            setTimeout(() => {\n                if ($(event.target.getIframe()).closest('.slick-slide').hasClass('slick-active')) {\n                    this.$slick.slick('slickPause');\n                    if (typeof this.$slick.data('youtubeMute') !== 'undefined') {\n                        event.target.mute();\n                    }\n                    event.target.playVideo();\n                }\n            }, 200);\n        }\n    }\n\n    onPlayerStateChange(event) {\n        // Stop slick autoplay when video start playing\n        if (event.data === YT.PlayerState.PLAYING) { // eslint-disable-line\n            this.$slick.addClass('slick-video-playing');\n            this.$slick.slick('slickPause');\n        }\n\n        if (event.data === YT.PlayerState.PAUSED) { // eslint-disable-line\n            this.$slick.removeClass('slick-video-playing');\n        }\n\n        // go to next slide and enable autoplay back when video ended\n        if (event.data === YT.PlayerState.ENDED) { // eslint-disable-line\n            this.$slick.removeClass('slick-video-playing');\n            this.$slick.slick('slickPlay');\n            this.$slick.slick('slickNext');\n        }\n    }\n\n    onSlickInit() {\n        this.$videos.each((j, vid) => {\n            const $vid = $(vid);\n            const id = `youtube_player_${uid++}`;\n\n            $vid.attr('id', id);\n\n            // init player\n            const player = new YT.Player(id, { // eslint-disable-line\n                // host: 'http://www.youtube.com',\n                videoId: $vid.data('youtube'),\n                wmode: 'transparent',\n                playerVars: {\n                    controls: 0,\n                    disablekb: 1,\n                    enablejsapi: 1,\n                    fs: 0,\n                    rel: 0,\n                    showinfo: 0,\n                    iv_load_policy: 3,\n                    modestbranding: 1,\n                    wmode: 'transparent',\n                },\n                events: {\n                    onReady: this.onPlayerReady,\n                    onStateChange: this.onPlayerStateChange,\n                },\n            });\n        });\n    }\n\n    onSlickBeforeChange() {\n        const player = this.$slick.find('.slick-slide.slick-active').data('youtube-player');\n        if (player) {\n            player.stopVideo();\n        }\n    }\n\n    onSlickAfterChange() {\n        // Enable auto slide\n        this.$slick.slick('slickPlay');\n\n        // On desktop:\n        // - Auto play video when open next slide\n        // - Stop auto slide\n        if (mediumMediaQuery.matches) {\n            const player = this.$slick.find('.slick-slide.slick-active').data('youtube-player');\n            if (player) {\n                this.$slick.slick('slickPause');\n                if (typeof this.$slick.data('youtubeMute') !== 'undefined') {\n                    player.mute();\n                }\n                player.playVideo();\n            }\n        }\n    }\n}\n\nfunction initCarousel($carousel) {\n    $carousel.each((i, slick) => {\n        const $slick = $(slick);\n        if ($slick.find('[data-youtube]').length > 0) {\n            $slick.addClass('slick-slider--video');\n            new YoutubeSlick(slick); // eslint-disable-line\n        }\n    });\n}\n\nexport default function youtubeCarouselFactory($carousel) {\n    if ($carousel.find('[data-youtube]').length > 0) {\n        mediumMediaQuery = mediaQueryListFactory('medium');\n\n        if (typeof window.onYouTubeIframeAPIReady === 'undefined') {\n            window.onYouTubeIframeAPIReady = initCarousel.bind(window, $carousel);\n\n            // Load the IFrame Player API code asynchronously.\n            const tag = document.createElement('script');\n            tag.src = 'https://www.youtube.com/player_api';\n            const firstScriptTag = document.getElementsByTagName('script')[0];\n            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n            // $('body').append('<script src=\"https://www.youtube.com/iframe_api\"></script>');\n        } else {\n            initCarousel($carousel);\n        }\n    }\n}\n"],"sourceRoot":""}